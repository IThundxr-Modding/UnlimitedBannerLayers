plugins {
    id 'fabric-loom' version '1.5.8'
    id 'maven-publish'
    id "me.shedaniel.unified-publishing" version "0.1.+" // https://github.com/shedaniel/unified-publishing
}

version = mod_version
group = maven_group

repositories {
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.terraformersmc.com/releases" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    modImplementation include("maven.modrinth:midnightlib:${midnightlib_version}")

    modLocalRuntime "com.terraformersmc:modmenu:${modmenu_version}"
}

processResources {
    inputs.property "version", version
    inputs.property "minecraft_version", minecraft_version
    inputs.property "loader_version", loader_version
    inputs.property "fabric_api_version", fabric_api_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": version,
                "minecraft_version": minecraft_version,
                "fabric_api_version": fabric_api_version,
                "loader_version": loader_version
    }
}

unifiedPublishing {
    project {
        releaseType = "release"
        gameVersions = [minecraft_version]
        gameLoaders = ["fabric"]
        displayName = "Unlimited Banner Layers $mod_version mc$minecraft_version"
        mainPublication remapJar

        relations {
            depends {
                curseforge = modrinth = "fabric-api"
            }
        }

        if (System.getenv("CURSEFORGE_TOKEN")) {
            curseforge {
                token = System.getenv("CURSEFORGE_TOKEN")
                id = project.curseforge_id
            }
        }

        if (System.getenv("MODRINTH_TOKEN")) {
            modrinth {
                token = System.getenv("MODRINTH_TOKEN")
                id = project.modrinth_id
                version = "$mod_version-forge-mc$minecraft_version"
            }
        }
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}"}
    }
}